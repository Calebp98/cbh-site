---
import "../styles/global.css";
const currentYear = new Date().getFullYear();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <title>CBH</title>
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/cbh-site/favicon-32x32.png"
    />
    <link rel="shortcut icon" href="/cbh-site/favicon-32x32.png" />
  </head>

  <body>
    <div class="container">
      <!-- Mailing List Banner -->
      <div class="mailing-banner">
        <a
          href="https://airtable.com/appaIHmOOcKdMRRwU/pagECavrg1fHWriWf/form"
          target="_blank"
          class="banner-link"
        >
          Join our mailing list →
        </a>
      </div>

      <div class="mask-sketch"></div>
      <div class="far-uvc-sketch"></div>
      <div class="lab-robot-sketch"></div>
      <div class="pipette-sketch"></div>
      <div class="blood-cells-sketch"></div>
      <div class="chromosone-sketch"></div>
      <div class="crispr-sketch"></div>
      <div class="lab-coat-sketch"></div>
      <div class="sequencer-sketch"></div>
      <div class="test-tubes-sketch"></div>
      <header>
        <h1 id="title-text"><span class="title-text-animated"></span></h1>
        <div class="typing-container">
          <span class="tagline-text"></span>
        </div>
      </header>

      <section>
        <p class="cbh-description">
          Cambridge Biosecurity Hub (CBH) is a team of researchers mitigating
          risks from emerging biotechnologies through field-building, research,
          and policy.
        </p>
      </section>

      <section>
        <h2>Current Projects</h2>
        <div class="projects-grid">
          <div class="project-card" data-color="coral-red">
            <div class="project-header">
              <h4>AIxBio Fellowship</h4>
              <button class="expand-btn" aria-label="Expand project details">
                <span class="expand-icon">+</span>
              </button>
            </div>
            <div class="project-content">
              <p>
                <strong
                  >CBH is collaborating with ERA to run the first AIxBio
                  Fellowship</strong
                >
              </p>
              <p>
                It is an 8-week, fully funded research fellowship at Cambridge,
                UK, from January 26 - March 20, 2026.
              </p>
              <p>
                Our aim is for fellows to work on concrete projects mitigating
                biosecurity risks, including those amplified by frontier AI.
              </p>
              <p>
                For more information visit <a href="https://aixbiosecurity.com"
                  >aixbiosecurity.com</a
                >
              </p>
              <p>
                <strong>Applications for fellows close November 5th</strong>
              </p>
            </div>
          </div>
        </div>

        <h3 class="previous-projects-title">Previous Projects:</h3>
        <div class="projects-grid">
          <div class="project-card" data-color="sage-green">
            <div class="project-header">
              <h4>Biosecurity Fundamentals Reading Groups</h4>
              <button class="expand-btn" aria-label="Expand project details">
                <span class="expand-icon">+</span>
              </button>
            </div>
            <div class="project-content">
              <p>
                In-person reading groups focused on fundamental biosecurity
                concepts and research.
              </p>
            </div>
          </div>

          <div class="project-card" data-color="burnt-orange">
            <div class="project-header">
              <h4>Biosecurity Research Sprints</h4>
              <button class="expand-btn" aria-label="Expand project details">
                <span class="expand-icon">+</span>
              </button>
            </div>
            <div class="project-content">
              <p>
                Intensive research sprints tackling specific biosecurity
                challenges and policy issues.
              </p>
            </div>
          </div>

          <div class="project-card" data-color="deep-purple">
            <div class="project-header">
              <h4>Cambridge Pandemic Prevention Symposium</h4>
              <button class="expand-btn" aria-label="Expand project details">
                <span class="expand-icon">+</span>
              </button>
            </div>
            <div class="project-content">
              <p>
                The Cambridge Pandemic Prevention Symposium was held at Jesus
                College on 7th October 2024. We had >100 attendees and a series
                of impressive speakers including Dr Cassidy Nelson (CLTR), Dr
                Ewan Harrison (University of Cambridge), Dr Nicole Wheeler
                (University of Birmingham) and Dr Sana Zakaria (RAND Europe).
              </p>
            </div>
          </div>
        </div>
      </section>

      <section>
        <h2>Meet the Team</h2>
        <div class="team">
          <div class="team-member">
            <h3>Dr Grace Braithwaite</h3>
            <img
              src="/cbh-site/profile_pics/grace.webp"
              alt="Grace Braithwaite"
              class="profile-image"
              data-bio="Grace is a medical doctor with a masters in public health. She now runs Cambridge Biosecurity Hub fulltime."
            />
            <p>Founder</p>
          </div>
          <div class="team-member">
            <h3>Sandy Hickson</h3>
            <img
              src="/cbh-site/profile_pics/sandy.webp"
              alt="Sandy Hickson"
              class="profile-image"
              data-bio="Sandy is a PhD student in genetics and bioinformatics at the University of Cambridge."
            />
            <p>Founder</p>
          </div>
          <div class="team-member">
            <h3>Dr Phil Palmer</h3>
            <img
              src="/cbh-site/profile_pics/phil.webp"
              alt="Phil Palmer"
              class="profile-image"
              data-bio="Phil has a PhD in bioinformatics from the University of Cambridge."
            />
            <p>Research Lead</p>
          </div>
          <div class="team-member">
            <h3>Dr Richard Moulange</h3>
            <img
              src="/cbh-site/profile_pics/richard.webp"
              alt="Richard Moulange"
              class="profile-image"
              data-bio="Richard has a PhD in machine learning from the University of Cambridge, and works on AIxBio Policy at the Centre for Long-Term Resilience - a think tank based in London."
            />
            <p>Research Affiliate</p>
          </div>
        </div>
      </section>

      <section>
        <p class="contact-description">
          For inquiries, please contact{" "}
          <a href="mailto:grace@cambiohub.org">grace@cambiohub.org</a>
        </p>
      </section>

      <footer>
        <p>
          CBH is a project of the community interest company registered as
          Meridian Impact CIC at Companies House (company number 13653958).
        </p>
        <p>
          © {currentYear}, Cambridge Biosecurity Hub / Meridian CIC. All rights
          reserved.
        </p>
        <p>
          <a
            href="https://docs.google.com/document/d/1CFYbwG6pk7IFZQGaJ_kjjFgLBL6DEOU-37cytMMzp8M/edit?tab=t.0"
            target="_blank">Code of Conduct</a
          > |
          <a
            href="https://airtable.com/apprENapaPZGahH6Q/pagJeUj3jByPSzIGu/form"
            target="_blank">Community Incident Form</a
          > |
          <a
            href="https://airtable.com/appaIHmOOcKdMRRwU/pagECavrg1fHWriWf/form"
            target="_blank">CBH Mailing List Signup</a
          > |
          <a
            href="https://www.linkedin.com/company/cambridge-biosecurity-hub/posts/?feedView=all"
            target="_blank">LinkedIn</a
          >
        </p>
        <div class="designer-credit">
          <p>
            Designed by <a href="https://calebp98.github.io/" target="_blank"
              >Caleb Parikh</a
            >
          </p>
        </div>
      </footer>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // DNA bases
        const dnaBases = ["A", "C", "G", "T"];
        const rnaBases = ["A", "C", "G", "U"];

        function generateRandomSequence(
          targetText: string,
          bases: string[]
        ): string[] {
          return targetText.split("").map((char) => {
            if (char === " ") {
              return " "; // Keep spaces as spaces
            }
            return bases[Math.floor(Math.random() * bases.length)];
          });
        }

        function wrapBasesWithColors(sequence: string[]): string {
          return sequence
            .map((base) => {
              if (base === " ") {
                return " "; // Keep spaces as plain spaces
              }
              const className = `base-${base.toLowerCase()}`;
              return `<span class="${className}">${base}</span>`;
            })
            .join("");
        }

        // DNA Transcription animation for title
        const titleText = document.querySelector(
          ".title-text-animated"
        ) as HTMLElement;
        const titleMessage = "Cambridge Biosecurity Hub";
        let titleCurrentSequence: string[] = [];
        let titleAnimationIndex = 0;
        const titleAnimationSpeed = 250;
        const titlePauseTime = 2000;

        function titleDnaTranscription() {
          const targetChars = titleMessage.split("");

          if (titleAnimationIndex === 0) {
            // Start with DNA sequence
            titleCurrentSequence = generateRandomSequence(
              titleMessage,
              dnaBases
            );
            titleText.innerHTML = wrapBasesWithColors(titleCurrentSequence);
          } else if (titleAnimationIndex === 1) {
            // Another DNA sequence variation
            titleCurrentSequence = generateRandomSequence(
              titleMessage,
              dnaBases
            );
            titleText.innerHTML = wrapBasesWithColors(titleCurrentSequence);
          } else if (titleAnimationIndex === 2) {
            // Convert to RNA
            titleCurrentSequence = titleCurrentSequence.map((base) =>
              base === "T" ? "U" : base
            );
            titleText.innerHTML = wrapBasesWithColors(titleCurrentSequence);
          } else if (titleAnimationIndex === 3) {
            // Another RNA variation
            titleCurrentSequence = generateRandomSequence(
              titleMessage,
              rnaBases
            );
            titleText.innerHTML = wrapBasesWithColors(titleCurrentSequence);
          } else if (titleAnimationIndex === 4) {
            // Start introducing target characters
            const halfLength = Math.floor(targetChars.length / 2);
            for (let i = 0; i < halfLength; i++) {
              const randomIndex = Math.floor(
                Math.random() * titleCurrentSequence.length
              );
              titleCurrentSequence[randomIndex] = targetChars[randomIndex];
            }
            titleText.innerHTML = wrapBasesWithColors(titleCurrentSequence);
          } else if (titleAnimationIndex === 5) {
            // Final result
            titleText.textContent = titleMessage;
            return; // Title animation complete
          }

          titleAnimationIndex++;
          setTimeout(titleDnaTranscription, titleAnimationSpeed);
        }

        // Start DNA transcription animation for title
        titleDnaTranscription();

        // DNA Transcription animation for tagline
        const taglineText = document.querySelector(
          ".tagline-text"
        ) as HTMLElement;
        const taglines = [
          "Safeguarding Biological Research.",
          "Working to usher in a future of safe and transformative biotechnologies.",
        ];
        let taglineIndex = 0;
        let taglineCurrentSequence: string[] = [];
        let taglineAnimationIndex = 0;
        const taglineAnimationSpeed = 250;
        const taglinePauseTime = 3000;

        function taglineDnaTranscription() {
          const taglineMessage = taglines[taglineIndex];
          const targetChars = taglineMessage.split("");

          if (taglineAnimationIndex === 0) {
            // Start with DNA sequence
            taglineCurrentSequence = generateRandomSequence(
              taglineMessage,
              dnaBases
            );
            taglineText.innerHTML = wrapBasesWithColors(taglineCurrentSequence);
          } else if (taglineAnimationIndex === 1) {
            // Another DNA sequence variation
            taglineCurrentSequence = generateRandomSequence(
              taglineMessage,
              dnaBases
            );
            taglineText.innerHTML = wrapBasesWithColors(taglineCurrentSequence);
          } else if (taglineAnimationIndex === 2) {
            // Convert to RNA
            taglineCurrentSequence = taglineCurrentSequence.map((base) =>
              base === "T" ? "U" : base
            );
            taglineText.innerHTML = wrapBasesWithColors(taglineCurrentSequence);
          } else if (taglineAnimationIndex === 3) {
            // Another RNA variation
            taglineCurrentSequence = generateRandomSequence(
              taglineMessage,
              rnaBases
            );
            taglineText.innerHTML = wrapBasesWithColors(taglineCurrentSequence);
          } else if (taglineAnimationIndex === 4) {
            // Start introducing target characters
            const halfLength = Math.floor(targetChars.length / 2);
            for (let i = 0; i < halfLength; i++) {
              const randomIndex = Math.floor(
                Math.random() * taglineCurrentSequence.length
              );
              taglineCurrentSequence[randomIndex] = targetChars[randomIndex];
            }
            taglineText.innerHTML = wrapBasesWithColors(taglineCurrentSequence);
          } else if (taglineAnimationIndex === 5) {
            // Final result
            taglineText.textContent = taglineMessage;
            // Wait before switching to next tagline
            setTimeout(() => {
              taglineAnimationIndex = 0;
              taglineIndex = (taglineIndex + 1) % taglines.length;
              taglineDnaTranscription();
            }, taglinePauseTime);
            return; // This message complete
          }

          taglineAnimationIndex++;
          setTimeout(taglineDnaTranscription, taglineAnimationSpeed);
        }

        // Start DNA transcription animation for tagline after a delay
        setTimeout(() => {
          taglineDnaTranscription();
        }, 2000);

        // Project cards functionality
        const projectCards = document.querySelectorAll(".project-card");

        projectCards.forEach((card) => {
          card.addEventListener("click", function (event) {
            const target = event.target as HTMLElement;
            const content = card.querySelector(
              ".project-content"
            ) as HTMLElement;
            const icon = card.querySelector(".expand-icon") as HTMLElement;

            card.classList.toggle("expanded");

            if (card.classList.contains("expanded")) {
              icon.textContent = "−";
              content.style.maxHeight = content.scrollHeight + "px";
            } else {
              icon.textContent = "+";
              content.style.maxHeight = "0";
            }
          });
        });

        // Speech bubble functionality for team members
        const profileImages = document.querySelectorAll(".profile-image");
        let currentBubble: HTMLElement | null = null;

        function removeCurrentBubble() {
          if (currentBubble) {
            currentBubble.remove();
            currentBubble = null;
          }
        }

        function showBubble(img: HTMLImageElement) {
          // Remove any existing bubble
          removeCurrentBubble();

          const bio = img.getAttribute("data-bio");
          if (!bio) return;

          // Create new speech bubble
          const bubble = document.createElement("div");
          bubble.className = "speech-bubble";
          bubble.textContent = bio;

          // Add bubble to body for proper positioning
          document.body.appendChild(bubble);

          // Get image position
          const imgRect = img.getBoundingClientRect();

          // Position bubble
          positionBubble(bubble, imgRect);

          currentBubble = bubble;
        }

        function positionBubble(bubble: HTMLElement, imgRect: DOMRect) {
          const viewportWidth = window.innerWidth;
          const viewportHeight = window.innerHeight;
          const margin = 20;

          const bubbleRect = bubble.getBoundingClientRect();
          const bubbleWidth = bubbleRect.width;
          const bubbleHeight = bubbleRect.height;

          // Positioning logic
          const spaceOnRight = viewportWidth - imgRect.right;
          const showOnRight = spaceOnRight >= bubbleWidth + margin;

          // Position horizontally
          if (showOnRight) {
            bubble.classList.add("tail-right");
            bubble.classList.remove("tail-left");
            bubble.style.left = `${imgRect.right + 10}px`;
          } else {
            bubble.classList.add("tail-left");
            bubble.classList.remove("tail-right");
            bubble.style.left = `${Math.max(margin, imgRect.left - bubbleWidth - 10)}px`;
          }

          // Position vertically - center relative to image, but keep within viewport
          let topPosition = imgRect.top + imgRect.height / 2 - bubbleHeight / 2;

          // Ensure bubble doesn't go above viewport
          if (topPosition < margin) {
            topPosition = margin;
          }

          // Ensure bubble doesn't go below viewport
          if (topPosition + bubbleHeight > viewportHeight - margin) {
            topPosition = viewportHeight - bubbleHeight - margin;
          }

          bubble.style.top = `${topPosition}px`;
        }

        profileImages.forEach((image) => {
          const img = image as HTMLImageElement;
          const bio = img.getAttribute("data-bio");

          if (!bio) return;

          // Add hover events for all devices
          img.addEventListener("mouseenter", function () {
            showBubble(img);
          });

          img.addEventListener("mouseleave", function () {
            removeCurrentBubble();
          });

          // Click event for all devices
          img.addEventListener("click", function (e) {
            showBubble(img);
          });

          // Remove bubble on scroll or resize
          img.addEventListener("scroll", removeCurrentBubble);
        });

        // Remove bubble on window resize or scroll
        window.addEventListener("resize", removeCurrentBubble);
        window.addEventListener("scroll", removeCurrentBubble);
      });
    </script>
  </body>
</html>
